import{r as t,h as s}from"./p-80e7f1ae.js";import{u as i,c as e,Z as h,t as n}from"./p-ce48150b.js";const r=class{constructor(s){t(this,s),this.charIndexes=[],this.reverseCharIndexes=[],this.previousValue="",this.currentValue="",this.template="",this.ban="",this.pattern="",this.char="_",this.hidden=!1,this.handleFocus=this.handleFocus.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.handleInput=this.handleInput.bind(this),this.init()}init(){return this.charIndexes=this.template.split("").reduce((t,s,i)=>(s===this.char&&t.push(i),t),[]),this.reverseCharIndexes=[...this.charIndexes].reverse(),this.banned=this.ban&&new RegExp(this.ban),this.regex=this.pattern&&this.pattern.substr(1).split(this.pattern[0]).map(t=>t&&new RegExp(t)||null),this}templateHandler(t,s){const{value:h,char:n}=this;this.init().value=i(e(h,s,n),t,n)}charHandler(t,s){const{value:h,template:n}=this;this.init().value=i(e(h,n,s),n,t)}get previousCharIndex(){return this.reverseCharIndexes.find(t=>this.selectionStart>t)||this.charIndexes[0]}get value(){return this.currentValue}set value(t){const{char:s,hidden:i,input:e}=this,h=t.indexOf(s);this.currentValue=t,e.value=i&&h>-1?t.substring(0,h):t}handleFocus(){const{input:t,template:s,char:n}=this;this.value=i(e(this.value,s,n),s,this.char),h(0).then(()=>{const s=t.value.indexOf(n);this.input.setSelectionRange(0,s>-1?s:t.value.length)})}handleKeyDown(t){const{banned:s,hidden:h,template:n,char:r,charIndexes:a,selectionStart:o}=this;t.key&&1===t.key.length&&s&&s.test(t.key)&&!(t.altKey||t.ctrlKey||t.metaKey)&&t.preventDefault(),this.previousValue=h?i(e(t.target.value,n,r),n,r):t.target.value,this.selectionStart=t.target.selectionStart,this.selectionEnd=t.target.selectionEnd,this.currentCharIndex=a.findIndex(t=>t===o)}handleInput(t){const{input:s,template:h,char:r,regex:a,previousValue:o,banned:c,selectionStart:l,selectionEnd:d,currentCharIndex:u,previousCharIndex:p,charIndexes:m,reverseCharIndexes:f}=this;if(new RegExp(this.char).test(this.previousValue)||"insertFromPaste"===t.inputType||"deleteContentBackward"===t.inputType||"deleteContentForward"===t.inputType||l!==d)if("insertFromPaste"===t.inputType&&navigator.clipboard.readText().then(t=>{if(!c.test(t)){let n=o;if(l<d){const t=f.find(t=>t<=l-1),s=f.find(t=>t<=d-1),a=m.findIndex(s=>s===t),c=m.findIndex(t=>t===s),u=e(o,h,r),p=u.substring(0,a+1)+u.substring(c+1,o.length);n=i(p,h,r)}const a=m.find(t=>t>=l),c=this.charIndexes.findIndex(t=>t===a),u=e(n,h,r);n=u.substring(0,c)+t+u.substring(c,o.length),this.value=i(n,h,this.char);const p=m[c+t.length]||this.value.indexOf(r)||this.value.length;s.setSelectionRange(p,p)}}),"deleteContentBackward"!==t.inputType){if("deleteContentForward"===t.inputType){const t=m.find(t=>t>=l),n=m.findIndex(s=>s===t),a=e(o,h,r),c=a.substring(0,n)+a.substring(n+1,o.length);return this.value=i(c,h,r),void s.setSelectionRange(l,l)}if(!(t.altKey||t.ctrlKey||t.metaKey)){if(!t.data||n.exists(a[u])&&!a[u].test(t.data))return this.value=o,void s.setSelectionRange(l,l);if(o.charAt(l)===r||l===h.length){const n=e(o,h,r);this.value=i(n+t.data,h,r);const a=this.value.indexOf(r),c=a<0?h.length:a;s.setSelectionRange(c,c)}else{let n=o;if(l<d){const t=f.find(t=>t<=l-1),s=f.find(t=>t<=d-1),a=m.findIndex(s=>s===t),c=m.findIndex(t=>t===s),u=e(o,h,r),p=u.substring(0,a+1)+u.substring(c+1,o.length);n=i(p,h,r)}const a=m.find(t=>t>=l),c=this.charIndexes.findIndex(t=>t===a),u=e(n,h,r);n=u.substring(0,c)+t.data+u.substring(c,o.length);const p=m.find(t=>t>a);this.value=i(n,h,this.char),s.setSelectionRange(p,p)}}}else{const t=f.find(t=>t<=l-1),n=f.find(t=>t<=d-1),a=m.findIndex(s=>s===t),c=m.findIndex(t=>t===n),u=e(o,h,r);if(a<c){const t=u.substring(0,a+1)+u.substring(c+1,o.length);this.value=i(t,h,r),t?s.setSelectionRange(p+1,p+1):s.setSelectionRange(p,p)}else{const t=u.substring(0,a)+u.substring(c+1,o.length);this.value=i(t,h,r),s.setSelectionRange(p,p)}}else this.value=o}componentWillLoad(){this.input=document.getElementById(this.for),this.input.addEventListener("focus",this.handleFocus),this.input.addEventListener("keydown",this.handleKeyDown),this.input.addEventListener("input",this.handleInput)}disconnectedCallback(){this.input&&this.input.removeEventListener&&(this.input.removeEventListener("focus",this.handleFocus),this.input.removeEventListener("keydown",this.handleKeyDown),this.input.removeEventListener("input",this.handleInput))}render(){return s("slot",null)}static get watchers(){return{template:["templateHandler"],char:["charHandler"]}}};r.style=":host{display:none}";export{r as ku4_mask}